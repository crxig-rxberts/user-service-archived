name: User Service CI/CD

on:
  push:

jobs:
  # Initial build job, run tests
  Build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.2
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: registration
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set up maildev
        run: docker run -d -p 1080:1080 -p 1025:1025 maildev/maildev

      - name: Run Application Tests
        env:
          SPRING_PROFILES_ACTIVE: local
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

      - name: Package Application
        run: mvn --batch-mode package

      - name: Upload JAR
        uses: actions/upload-artifact@v2
        with:
          name: user-service
          path: target/*.jar


  # Deploy to AWS job
  ci-deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Ansible
        run: sudo apt-get update && sudo apt-get install -y ansible

      # Download the JAR artifact from previous Build job
      - name: Download JAR
        uses: actions/download-artifact@v2
        with:
          name: user-service
          path: ./target

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Create keypair for EC2
        run: ssh-keygen -t rsa -b 4096 -f ~/.ssh/deployer-key

      - name: Terraform Init
        working-directory: .deploy
        run: terraform init

      - name: Terraform Plan
        working-directory: .deploy
        run: terraform plan

      - name: Terraform Apply
        working-directory: .deploy
        run: terraform apply -auto-approve

      - name: Run script to set environment variables
        working-directory: .deploy
        run: bash update-properties.sh

      - name: Run Ansible playbook
        run: ansible-playbook playbook.yml -i localhost, -e "target_ip=$EC2_IP"

        env:
          SPRING_PROFILES_ACTIVE: local
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_DB_PASSWORD: ${{ secrets.TF_VAR_DB_PASSWORD }}
          TF_VAR_DB_USERNAME: ${{ secrets.TF_VAR_DB_USERNAME }}